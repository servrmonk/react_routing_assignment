/* Video Notes */

Module Content:

-> What is Client-side "Routing"

-> Using React-Router

-> Advance Features: Dynamic & Nested Routes



/welcome like different path

page change = New Requests + Response



Building SPAs

->When building complex user interfaces, we typically build Single Page Applications (SPAs)

->Only one initial HTML request and response

->Page (url) changes are then handled by client-side (React) code (changes the visible content without fetching a new HTML file)

we want a package which does all the routing and which looks at the url and brings different components on to the screen based on url changes but which does all of that in browser so we use a third party package that does that known as react router it is the package which u have to install seperatly it's not built in to react. it give us a feature to implement client side routing u can visit reactrouter.com or github repo



react router provides client side routing (routing simply means is different url different path in url load different pages),

load means render , conditionaly render

our-domain.com/ => component a

our-domain.com/products => component b



in rootfile we need to import browserrouter and wrap the overall app

{/* whenever we click on "a" link it refresh it send the whole network request by using link we can prevent */}

      {/* <a href='/welcome'>Welcome</a> */}

      <Link to='/welcome'>Welcome</Link>



now to highlight the active link react router have a extra feature instead of using the regurlar link we can use the Nav.link component it stil ccreate a anchor tag navlink also set a css class on the active item we just have to telllink which class to add  by doing this activeClassName


we always want to run product page with diff data 

because we need different type of information based on the product we clicked on we definetly wonna use one of the same component but we need a way of telling react router for which specific product is component should be loaded so that inside of these component we can than kind of retrieve that extra product data 

for this we define dynamic routes instead of just defining /product-detail 

<Route path=`/product-details/:productId` /> thisis the dynamic part segment this tells react router that overall pathfor which thispage should be loaded will be something like this

//our-domain.com/product-detail/<any value /> its a place holder anything  this is a dynamic segment and it takes any value so this component  inside this will be loaded on <the value that is present here />



 se we need the value of productId    <Route path=`/product-details/:productId` />

we use the useParams hook  : this useParams returns a params object which we can store in the constant 

const params = useParams() . the params object will have key value pair where the keys is dynamic section leading to the page  in this caswe have 1 segment  :productId . u can console 































